
```{r}
library(ravelRy)
library(dplyr)
library(gt)
library(purrr)
library(tidyr)


hot_right_now <- search_patterns(page_size = 20)

# Step 1: Fetch top 25 patterns
top_patterns <- search_patterns(page_size = 20) |>
  mutate(rank = 1:20)

# Step 2: Get detailed info for each pattern
pattern_details <- get_patterns(top_patterns$id)

# Step 3: Assemble dataframe
pattern_df <- pattern_details |>
  select(
    favorites_count,
    free,
    id,
    name,
    permalink,
    projects_count,
    published,
    gauge,
    gauge_divisor,
    gauge_pattern,
    yarn_weight_description,
    yardage_description,
    photos,
    craft
  ) |>
  mutate(photos = map(photos, pluck, "small_url", 1)) |>
  unnest(photos) |>
  mutate(craft = map(craft, pluck, "name", 1)) |>
  unnest(craft) |>
  merge(top_patterns |> select(id, designer.name, rank), by = "id") |>
  arrange(rank) |>
  mutate(
    across(
      c(id, favorites_count, projects_count, gauge, gauge_divisor),
      as.numeric
    ),
    permalink = paste0("ravelry.com/", permalink),
    across(where(is.character), ~ na_if(., ""))
  )

```


```{r}
pattern_df |>
  select(
    photos,
    name,
    permalink,
    designer.name,
    craft,
    gauge,
    gauge_divisor,
    yarn_weight_description,
    yardage_description,
    projects_count,
    favorites_count
  ) |>
gt() |>
    text_transform(
    locations = cells_body(columns = photos),
    fn = function(x) {
      lapply(x, function(url) {
        html(paste0(
          "<div style='width:150px; height:150px; overflow:hidden; display:inline-block;'>",
          "<img src='", url, "' style='width:300px; height:150px; object-fit:cover;'>",
          "</div>"
        ))
      })
    }
  ) |>
  fmt_url(
    columns = permalink,
    label = fontawesome::fa(
      name = "link",
      height = "0.7em",
      vertical_align = "0em"
     ),
  ) |>
  cols_add(heart = "Heart", project = "mitten") |>
  fmt_icon(heart, fill_color = "red", stroke_color = "red") |>
  fmt_icon(project, fill_color = "blue", stroke_color = "blue") |>
  cols_merge(
    columns = c(name, permalink),
    pattern = "{1} {2}"
  ) |>
  cols_merge(
    columns = c(favorites_count, heart, projects_count, project),
    pattern = "{2} {1} {4} {3}"
  ) |>
  cols_merge(
    columns = c(gauge, gauge_divisor),
    pattern = "<<{1} sts in {2} inches>>"
  ) |>
  cols_width(
    photos ~ px(200),
    name ~ px(100),
    designer.name ~ px(80),
    craft ~ px(50),
    gauge ~ px(50),
    yarn_weight_description ~ px(50)
  ) |>
    cols_align(
    align = "center",
    columns = c("photos", "favorites_count")
  ) |>
  cols_align(
    align = "left",
    columns = c("gauge", "gauge_divisor")
  ) |>
  cols_label(
    photos = "",
    name = md("**Pattern**"),
    designer.name = md("**Designer**"),
    yarn_weight_description = md("**Weight**"),
    gauge = md("**Gauge**"),
    yardage_description = md("**Yardage**"),
    favorites_count = "",
    craft = md("**Craft**")
  ) |>
  tab_options(
    table.background.color = "#1E1F26",
    table.font.size = px(16),
    table.border.top.color = "transparent",
    table.border.bottom.color = "transparent",
    table_body.hlines.color = "transparent",
    table_body.border.bottom.color = "transparent",
    column_labels.border.bottom.color = "transparent",
    column_labels.border.top.color = "transparent",
    footnotes.background.color = "#CDD4DC",
    source_notes.background.color = "#CDD4DC"
  ) |> 
  tab_style_body(
    style = cell_borders(
      sides = c("top", "bottom"),
      weight = px(0) # Remove row borders
    ),
    fn = function(x) { is.numeric(x) | is.character(x) }
  ) |> 
  opt_css(
    css = "
    table tr:nth-child(odd) {
      background-color: #2C2F3A;
    }

    table tr:hover {
      background-color: #3A4A6B;
    }

    .cell-output-display {
      overflow-x: unset !important;
    }
    
    div#custom {
      overflow-x: unset !important;
      overflow-y: unset !important;
    }
    
    #custom .gt_col_heading {
      position: sticky !important;
      top: -5px !important;
      z-index: 10 !important;
    }
    "
  )



```