::: {.cell}
```{=html}
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<link href="https://cdnjs.cloudflare.com/ajax/libs/lightbox2/2.11.3/css/lightbox.min.css" rel="stylesheet">
<script src="https://cdnjs.cloudflare.com/ajax/libs/lightbox2/2.11.3/js/lightbox.min.js"></script>
```
:::

# Dashboard

```{r get-data}
library(ravelRy)
library(dplyr)
library(gt)
library(purrr)
library(tidyr)
library(stringr)


hot_yesterday <- read.csv("./data/hot_yesterday.csv")

# grab top 25 patterns, 
# check for knit/crochet alongs to remove,
# then reduce total count to top 20
top_patterns <- search_patterns(page_size = 25) |>
  filter(!str_detect(name, regex(str_c(c("cal", "kal", "along", "a-long"), collapse = "|"), ignore_case = TRUE))) |>
  slice_head(n = 20) |>
  mutate(rank = 1:20)

# grab full pattern details
pattern_details <- get_patterns(top_patterns$id)

# assemble df
pattern_df <- pattern_details |>
  select(
    favorites_count,
    id,
    name,
    permalink,
    projects_count,
    published,
    gauge,
    gauge_divisor,
    gauge_pattern,
    yarn_weight_description,
    photos,
    craft,
    free
  ) |>
  mutate(
    photos_small = map(photos, pluck, "small_url", 1),
    photos_large = str_replace(photos_small, "_small_best_fit", "")
  ) |>
  mutate(craft = map(craft, pluck, "name", 1)) |>
  unnest(craft) |>
  merge(top_patterns |> select(id, designer.name, rank), by = "id") |>
  arrange(rank) |>
  mutate(
    across(
      c(id, favorites_count, projects_count, gauge, gauge_divisor),
      as.numeric
    ),
    permalink = paste0("https://www.ravelry.com/patterns/library/", permalink),
    across(where(is.character), ~ na_if(., ""))
  ) |>
mutate(photos = paste0(
  "<a href='", photos_large, "' data-lightbox='ravelry-gallery", "'>",
  "<img src='", photos_small, "' style='width:150px; height:150px; object-fit:cover; border:2px solid white;'>",
  "</a>"
))




```

```{r make-plot}

df_temp <- data.frame()


# add filtering for just those appearing in current HRN?
for (name in hot_yesterday$name |> unique()) {
  data.frame(
    name = name,
    id = hot_yesterday[hot_yesterday$name == name,]$id |> head(1),
    date = seq(Sys.Date() - 6, Sys.Date(), by = "days"),
    rank = NA
  ) |> rbind(df_temp) -> df_temp
}

hot_yesterday <- df_temp |> merge(
  hot_yesterday,
  by = c("name", "date"),
  all.x = TRUE
) |>
select(-c(id.y, rank.x)) |>
rename(
  "id" = id.x, "rank" = rank.y
) |> 
group_by(id) |>
mutate(history = list(as.list(setNames(21 - rank, date))))

```


```{r make-table}

pattern_df |>
  merge(
    hot_yesterday |> filter(date == Sys.Date() - 1),
    by = c("id", "name"),
    suffixes = c("","_yesterday"),
    all.x = TRUE
  ) |>
  select(
    photos,
    name,
    permalink,
    designer.name,
    craft,
    gauge,
    gauge_divisor,
    yarn_weight_description,
    projects_count,
    favorites_count,
    rank,
    rank_yesterday,
    history
  ) |>
  mutate(
    change = case_when(
      rank - rank_yesterday < 0 ~ "arrow-up",
      rank - rank_yesterday > 0 ~ "arrow-down",
      rank - rank_yesterday == 0 ~ NA,
      .default = "star"
    ),
    .before = photos
  ) |>
  arrange(rank) |>
  gt() |>
  fmt_markdown(columns = photos) |>
  fmt_icon(
    columns = change,
    fill_color = c("arrow-up" = "#128800ff", "arrow-down" = "#c50101ff",
    "star" = "#776602ff",
    height = "1.5em")
  ) |>
  cols_merge(
    columns = c(name, permalink),
    pattern = "<a href='{2}' target='_blank'>{1}</a>"
  ) |>
  fmt_markdown(
    columns = name
  ) |>
  cols_add(
    favourites = "./static/favourites.svg",
    projects = "./static/needles.svg") |>
  text_transform(
    locations = cells_body(columns = favourites),
    fn = function(x) {
      mapply(function(img, val) {
        html(paste0(
          "<div style='display:flex; align-items:center; gap:10px;'>",
          as.character(local_image(img, height = 30)),
          "<span>", val, "</span>",
          "</div>"
        ))
      }, x, pattern_df$favorites_count, SIMPLIFY = FALSE)
    }
  ) |>
  text_transform(
    locations = cells_body(columns = projects),
    fn = function(x) {
      mapply(function(img, val) {
        html(paste0(
          "<div style='display:flex; align-items:center; gap:10px;'>",
          as.character(local_image(img, height = 30)),
          "<span>", val, "</span>",
          "</div>"
        ))
      }, x, pattern_df$projects_count, SIMPLIFY = FALSE)
    }
  ) |>
  cols_hide(columns = c(projects_count, favorites_count, rank, rank_yesterday))|>
  cols_merge(
    columns = c(gauge, gauge_divisor),
    pattern = "<<{1} sts / {2} in>>"
  ) |>
  cols_nanoplot(
    columns = history,
    new_col_label = md("**History**"),
    new_col_name = "nanoplot",
    after = "yarn_weight_description",
    missing_vals = "zero",
    autoscale = TRUE,
    options = nanoplot_options(
      data_point_stroke_color = "#f2938a",
      data_point_fill_color = "#f2938a",
      data_line_stroke_color = "#a9bcf9",
      data_area_fill_color = "#A8A8B3",
      show_y_axis_guide = FALSE,
      vertical_guide_stroke_color = "#172869"
    )
  ) |>
  cols_width(
    photos ~ pct(12),
    name ~ pct(15),
    change ~ pct(5),
    designer.name ~ pct(15),
    craft ~ pct(12),
    gauge ~ pct(15),
    yarn_weight_description ~ pct(15),
    favourites ~ pct(5),
    projects ~ pct(5)
  ) |>
    cols_align(
    align = "left",
    columns = everything()
  ) |>
    cols_align(
    align = "center",
    columns = c("photos", "favourites", "projects", "change", "nanoplot")
  ) |>
  cols_move(
    columns = c(favourites, projects),
    after = designer.name
  ) |>
  cols_label(
    photos = "",
    name = md("**Pattern**"),
    change = "",
    designer.name = md("**Designer**"),
    yarn_weight_description = md("**Weight**"),
    gauge = md("**Gauge**"),
    favourites = "",
    projects = "",
    craft = md("**Craft**")
  ) |>
  sub_missing(
    columns = everything(),
    rows = everything(),
    missing_text = ""
  ) |>
    tab_options(
    table.background.color = "#1E1F26",
    table.font.size = px(16),
    table.border.top.color = "transparent",
    table.border.bottom.color = "transparent",
    table_body.hlines.color = "transparent",
    table_body.border.bottom.color = "transparent",
    column_labels.border.bottom.color = "transparent",
    column_labels.border.top.color = "transparent",
    table.margin.right = pct(1)
  ) |> 
  tab_style_body(
    style = cell_borders(
      sides = c("top", "right", "left", "bottom"),
      weight = px(0) # Remove row borders
    ),
    fn = function(x) { is.numeric(x) | is.character(x) }
  ) |> 
  opt_css(
    css = "
    table tr:nth-child(odd) {
      background-color: var(--brand-slate);
    }

    table tr:hover {
      background-color: #3A4A6B;
    }
    
    .gt_col_heading {
      position: sticky !important;
      top: 0px !important;
      z-index: 10 !important;
    }
    "
  )



```

```{r write-history}

pattern_df |>
  select(id, name, rank) |>
  mutate(date = Sys.Date()) |>
  rbind(
    hot_yesterday |>
    filter(
      !(is.na(rank)),
      date <= Sys.Date() - 1) |>
    select(id, name, rank, date)
  ) |>
  filter(Sys.Date() - date < 6) |>
  arrange(date, rank) |>
  write.csv("data/hot_yesterday.csv", row.names = FALSE)

```

# About

## Row

### Column {width=30%}

[![Alex McSween](static/profile.jpg)](https://alexmcsw.github.io/)


::: {.card title="**About Me** üíñ"}

Hi, I'm Alex! I'm a data scientist based in Ottawa, Ontario. I'm an organizer for [R-Ladies Ottawa](https://rladies-ottawa.github.io/) and am an avid knitter, sewist, and fibre artist üß∂

Find my (textile) work on [my ravelry](https://www.ravelry.com/people/amcsw) and my (technical) work on [my GitHub](https://github.com/alexmcsw) and [personal site](https://alexmcsw.github.io/)

:::

### Column

::: {.card title="**My submission** ‚öíÔ∏è" fill="false"}

[Ravelry](https://www.ravelry.com/) is a website for fibre artists to track their projects, browse, and sell knitting or crochet patterns. Ravelry has a "hot right now" section which features the patterns with the most visits in the last 24 hours.

In this table I fetch the Ravelry "hot right now" top 20 and present pattern details in a convenient and easy to read table so fibre artists can quickly decide if they're interested in a pattern. I remove any patterns related to knit/crochet-alongs as I personally find them really annoying and think the page traffic for such patterns is somewhat artificial anyways.

:::

#### Row {.tabset}

::: {.card title="Technical details üë©‚Äçüíª"}

I used the [`ravelRy`](https://github.com/walkerkq/ravelRy/) R package by Kaylin Pavlik to easily access the Ravelry api. I wrote some R code to fetch the 20 top "hot right now" patterns, some additional details about the patterns and their designers, and used the `gt` package to display the results in a beautiful table hosted in a [Quarto dashboard with GitHub pages](#dashboard). Using my Github action (which runs automatically each day) I store the most recent data so I can check the history and see if a pattern has ranked up or down. I also included a 7-day nanoplot to see a pattern's rank history. Finally, I used CSS and JS to add a lightbox to view a bigger version of each photo in the table.

:::


::: {.card title="Further work üö¶"}

I've played with the Ravelry API before! Check out my [R-Ladies Ottawa 2025 data hackathon submission](https://github.com/alexmcsw/ravelry-in-review) where I examined my own knitting data in another quarto dashboard.

I'm inspired by the intersection of math, stats, data science and textile arts. Here are some projects/artists that I find inspiring:

- [clay_muchi on Instagram](https://www.instagram.com/clay_mushi/?hl=en): Topographical crochet.
- [Daina Taimina](https://www.si.edu/spotlight/women-mathematicians/daina-taimina-a-modern-day-mathematical-model-maker): Inventor of the crocheted hyperbolic model.
- [Typeknitting](https://typeknitting.net/): An exploration of the typographical potential of handknitting.
- [Aperiodic Einstein Monotile](https://www.ravelry.com/patterns/library/aperiodic-einstein-monotile): A knitting pattern for the new (ish) monotile.
- [Copola Views Quilt](https://www.karennybergart.com/warehouse-for-digital-downloads/standard_products/digital-download-quilt-pattern-coupola-views): Quilt pattern inspired by the view from the ISS

:::
